% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/truncate.R
\name{truncate}
\alias{truncate}
\title{Eigenvalue truncation}
\usage{
truncate(
  x,
  s = NULL,
  components = NA,
  method = c("threshold", "hard", "identity"),
  alpha = NA,
  location = NA,
  zeroout = FALSE,
  verbose = TRUE,
  ...
)
}
\arguments{
\item{x}{A numeric real-valued matrix with n number
of samples and p number of features. If p>n,
a warning message is generated and the transpose of
x is used.}

\item{s}{A subspace class.}

\item{components}{A series of right singular vectors
to estimate. Components must be smaller or equal
to min(nrow(x),ncol(x)).}

\item{method}{The method to be used; method = "threshold"
returns (1-alpha)*rnk proportion of eigenvalues above threshold;
 method = "hard" returns all the empirical eigenvalues greater
  than the upper limit of the support to the Marcenko-Pastur spectrum;
 method = "identity" returns eigenvalues specified in location vector.}

\item{alpha}{Determine the fraction to keep of the top
eigenvalues in threshold method.}

\item{location}{Indicate the location of eigenvalues
to keep in identity method.}

\item{zeroout}{A logical value to zero out eigenvalues
when truncating. default is to set to FALSE.}

\item{verbose}{output message}

\item{...}{Extra parameters}
}
\value{
Returns a list with entries:
\describe{
  \item{xi_denoised:}{ A denoised estimator of eigenvalues
   through a simple eigenvalue truncation procedure (cf. reference below).}
  \item{x_denoised:}{ A denoised estimator of the true sigmal
   matrix underlying a noisy high dimensional matrix x.}
  \item{v_denoised:}{ A denoised estimator of the true covariance
   matrix underlying a noisy, in-sample estimate empirical
   correaltion matrix estimated from x (cf. reference below).}
  \item{e_denoised:}{ A denoised estimator of the true correlation
   matrix underlying a noisy, in-sample estimate empirical
   correaltion matrix estimated from x (cf. reference below).}
  \item{v:}{ Right singular vectors of x matrix for specified rank.}
  \item{u:}{ Left singular vectors of x matrix or specified rank.}
}
}
\description{
This function truncates the scaled eigenvalues
 of x in order to provide a denoised estimator e_denoised
 of the underlying correlation matrix. There are three methods
to chose from. The threshold method returns $(1-alpha)*rnk$
proportion of eigenvalues above threshold; the hard method returns
all the empirical eigenvalues greater than the upper limit of the
support to the Marchenko-Pastur spectrum; the identity method
returns eigenvalues specified in a location vector. While we
keep a proportion of eigenvalues, we can either shrink the
remaining ones by a trace-preserving constant (i.e.
$Tr(E\_denoised) = Tr(E)$) or set them all to zero.
This function is adapted from "Python for Random Matrix Theory"
credit to J.-P. Bouchaud and M. Potters.
}
\examples{
x <- x_sim(n = 100, p = 150, ncc = 10, var = c(rep(10, 5), rep(1, 5)))
x_denoised <- truncate(x,
                       components = 20,
                       method = "threshold",
                       alpha = 0.9,
                       zeroout = TRUE)
x_denoised <- truncate(x,
                       components = 20,
                       method = "hard",
                       zeroout = FALSE)
x_denoised <- truncate(x,
                       components = 20,
                       method = "identity",
                       location = c(1:15),
                       zeroout = FALSE)

# equivalently, if subspace is calculated
Subspace  <- subspace(x,
                      components = 1:20)
x_denoised <- truncate(subspace_ = Subspace,
                       method = "identity",
                       location = c(1:15),
                       zeroout = FALSE)
}
\seealso{
* [MarchenkoPasturPar()] calculates upper and lower
limits of Marcenko-Pastur distribution from RMTstat package.
}
